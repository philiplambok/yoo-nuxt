#!/bin/bash

# Build script for Nuxt Todo App Docker image
set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
IMAGE_NAME="yoo-nuxt-todo"
IMAGE_TAG="dev"
DOCKERFILE_PATH="dx/Dockerfile"

echo -e "${BLUE}🐳 Building Docker image for Nuxt Todo App${NC}"
echo -e "${YELLOW}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"

# Source common functions to check Docker
source "$(dirname "$0")/_common"
check_docker

# Get the project root directory (parent of dx folder)
PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
cd "$PROJECT_ROOT"

echo -e "${BLUE}📁 Project root: ${PROJECT_ROOT}${NC}"
echo -e "${BLUE}🔨 Building image: ${IMAGE_NAME}:${IMAGE_TAG}${NC}"

# Parse arguments
BUILD_ARGS=""
for arg in "$@"; do
    case $arg in
        --no-cache)
            BUILD_ARGS="--no-cache"
            echo -e "${BLUE}🧹 Building without cache (fresh build)...${NC}"
            echo -e "${BLUE}📦 This will reinstall all packages from scratch${NC}"
            echo ""
            shift
            ;;
        --help|-h)
            echo "Usage: ./dx/build [OPTIONS]"
            echo ""
            echo "Build Docker development image with Debian 12, mise, and Node.js 20"
            echo ""
            echo "Options:"
            echo "  --no-cache          Build without using Docker cache (fresh build)"
            echo "  --help, -h          Show this help message"
            echo ""
            echo "Examples:"
            echo "  ./dx/build                  # Normal build (uses cache)"
            echo "  ./dx/build --no-cache       # Fresh build without cache"
            echo ""
            echo "After building, use:"
            echo "  ./dx/run                    # Run the container"
            echo "  ./dx/dev                    # Start development server"
            exit 0
            ;;
    esac
done

# Build the Docker image
echo -e "${YELLOW}🏗️  Building Docker image...${NC}"
if [ -z "$BUILD_ARGS" ]; then
    echo -e "${BLUE}💡 Use './dx/build --no-cache' for fresh build without cache${NC}"
    echo ""
fi

if docker build $BUILD_ARGS -f "$DOCKERFILE_PATH" -t "${IMAGE_NAME}:${IMAGE_TAG}" .; then
    echo -e "${GREEN}✅ Docker image built successfully!${NC}"
    echo -e "${GREEN}📦 Image: ${IMAGE_NAME}:${IMAGE_TAG}${NC}"
else
    echo -e "${RED}❌ Failed to build Docker image${NC}"
    exit 1
fi

# Show image info
echo -e "${YELLOW}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo -e "${BLUE}📊 Image Information:${NC}"
docker images "${IMAGE_NAME}:${IMAGE_TAG}" --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}\t{{.CreatedAt}}"

echo ""
echo -e "${GREEN}🚀 Image ready! Next steps:${NC}"
echo -e "${BLUE}   Run container:    ${NC}./dx/run"
echo -e "${BLUE}   Development mode: ${NC}./dx/dev"
echo -e "${BLUE}   Container shell:  ${NC}./dx/run --shell"