#!/bin/bash

# Build script for Nuxt Todo App Docker image
set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
IMAGE_NAME="yoo-nuxt-todo"
IMAGE_TAG="dev"
DOCKERFILE_PATH="dx/Dockerfile"

echo -e "${BLUE}🐳 Building Docker image for Nuxt Todo App${NC}"
echo -e "${YELLOW}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    echo -e "${RED}❌ Docker is not running. Please start Docker and try again.${NC}"
    exit 1
fi

# Get the project root directory (parent of dx folder)
PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
cd "$PROJECT_ROOT"

echo -e "${BLUE}📁 Project root: ${PROJECT_ROOT}${NC}"
echo -e "${BLUE}🔨 Building image: ${IMAGE_NAME}:${IMAGE_TAG}${NC}"

# Check for --no-cache flag
BUILD_ARGS=""
if [[ "$*" == *"--no-cache"* ]]; then
    BUILD_ARGS="--no-cache"
    echo -e "${BLUE}🧹 Building without cache (fresh build)...${NC}"
    echo -e "${BLUE}📦 This will reinstall all packages from scratch${NC}"
    echo ""
fi

# Build the Docker image
echo -e "${YELLOW}🏗️  Building Docker image...${NC}"
if [ -z "$BUILD_ARGS" ]; then
    echo -e "${BLUE}💡 Use './dx/build --no-cache' for fresh build without cache${NC}"
    echo ""
fi

if docker build $BUILD_ARGS -f "$DOCKERFILE_PATH" -t "${IMAGE_NAME}:${IMAGE_TAG}" .; then
    echo -e "${GREEN}✅ Docker image built successfully!${NC}"
    echo -e "${GREEN}📦 Image: ${IMAGE_NAME}:${IMAGE_TAG}${NC}"
else
    echo -e "${RED}❌ Failed to build Docker image${NC}"
    exit 1
fi

# Show image info
echo -e "${YELLOW}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo -e "${BLUE}📊 Image Information:${NC}"
docker images "${IMAGE_NAME}:${IMAGE_TAG}" --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}\t{{.CreatedAt}}"

echo ""
echo -e "${GREEN}🚀 Ready to run! Use one of these commands:${NC}"
echo -e "${BLUE}   Development (with volume mount):${NC}"
echo -e "   docker run -it --rm -p 3000:3000 -v \"\$(pwd):/app\" -v /app/node_modules ${IMAGE_NAME}:${IMAGE_TAG}"
echo ""
echo -e "${BLUE}   Production-like (using image files):${NC}"
echo -e "   docker run -it --rm -p 3000:3000 ${IMAGE_NAME}:${IMAGE_TAG}"
echo ""
echo -e "${BLUE}   Interactive shell:${NC}"
echo -e "   docker run -it --rm ${IMAGE_NAME}:${IMAGE_TAG} sh"
echo ""
echo -e "${YELLOW}🌐 Access the app at: http://localhost:3000${NC}"